<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190209 04:52:09.359" generator="Robot 3.1.1 (Python 2.7.15 on linux2)">
<suite source="/home/tests" id="s1" name="Tests">
<suite source="/home/tests/02_liveAction" id="s1-s1" name="02 liveAction">
<suite source="/home/tests/02_liveAction/00_setup_vm.robot" id="s1-s1-s1" name="00 Setup Vm">
<test id="s1-s1-s1-t1" name="Create port forwarding to access Live Action VM">
<kw name="Connect to Server with Keys" library="linux">
<arguments>
<arg>server_address=${jumpbox_address}</arg>
<arg>username=admin</arg>
<arg>priv_key=${ssh_key_path}</arg>
</arguments>
<msg timestamp="20190209 04:52:11.369" level="TRACE">Arguments: [ ${server_address}='124.252.253.7' | ${server_port}='22' | ${username}='admin' | ${priv_key}='~/.ssh/id_rsa' | ${priv_key_password}=None | ${delay}='0.5' | ${prompt}=None | ${timeout}='3' | ${newline}='LF' ]</msg>
<kw name="Parse Path" library="CATSUtils">
<arguments>
<arg>${priv_key}</arg>
</arguments>
<assign>
<var>${p_path}</var>
</assign>
<msg timestamp="20190209 04:52:11.370" level="TRACE">Arguments: [ '~/.ssh/id_rsa' ]</msg>
<msg timestamp="20190209 04:52:11.370" level="TRACE">Return: {'dir_name': '/root/.ssh', 'file_name': 'id_rsa', 'full_path': '/root/.ssh/id_rsa'}</msg>
<msg timestamp="20190209 04:52:11.370" level="INFO">${p_path} = {u'file_name': u'id_rsa', u'full_path': u'/root/.ssh/id_rsa', u'dir_name': u'/root/.ssh'}</msg>
<status status="PASS" endtime="20190209 04:52:11.370" starttime="20190209 04:52:11.369"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${server_address}</arg>
<arg>port=${server_port}</arg>
<arg>prompt=${prompt}</arg>
<arg>timeout=${timeout}</arg>
<arg>newline=${newline}</arg>
</arguments>
<msg timestamp="20190209 04:52:11.371" level="TRACE">Arguments: [ '124.252.253.7' | port=22 | prompt=None | timeout='3' | newline='LF' ]</msg>
<msg timestamp="20190209 04:52:11.372" level="TRACE">Return: 1</msg>
<status status="PASS" endtime="20190209 04:52:11.372" starttime="20190209 04:52:11.371"></status>
</kw>
<kw name="Login With Public Key" library="SSHLibrary">
<doc>Logs into the SSH server using key-based authentication.</doc>
<arguments>
<arg>${username}</arg>
<arg>${p_path['full_path']}</arg>
<arg>password=${priv_key_password}</arg>
<arg>delay=${delay}</arg>
</arguments>
<msg timestamp="20190209 04:52:11.373" level="TRACE">Arguments: [ 'admin' | '/root/.ssh/id_rsa' | password=None | delay='0.5' ]</msg>
<msg timestamp="20190209 04:52:11.374" level="INFO">Logging into '124.252.253.7:22' as 'admin'.</msg>
<msg timestamp="20190209 04:52:11.510" level="DEBUG">Adding ssh-rsa host key for 124.252.253.7: de3db93dfeacbfb6d35fa30de33c3129</msg>
<msg timestamp="20190209 04:52:11.515" level="DEBUG">Trying key f1cc6b9cf45c6d60d7adbbda9b75b364 from /root/.ssh/id_rsa</msg>
<msg timestamp="20190209 04:52:11.635" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20190209 04:52:13.149" level="INFO">Read output: Last login: Sat Feb  9 04:50:45 2019 from c-73-12-248-166.hsd1.ca.comcast.net
[admin@jumpbox ~]$</msg>
<msg timestamp="20190209 04:52:13.149" level="INFO">/usr/lib/python2.7/site-packages/paramiko/rsakey.py:129: CryptographyDeprecationWarning: signer and verifier have been deprecated. Please use sign and verify instead.
  algorithm=hashes.SHA1(),
/usr/lib/python2.7/site-packages/paramiko/rsakey.py:109: CryptographyDeprecationWarning: signer and verifier have been deprecated. Please use sign and verify instead.
  algorithm=hashes.SHA1(),</msg>
<msg timestamp="20190209 04:52:13.149" level="TRACE">Return: 'Last login: Sat Feb  9 04:50:45 2019 from c-73-12-248-166.hsd1.ca.comcast.net\r\r\n[admin@jumpbox ~]$ '</msg>
<status status="PASS" endtime="20190209 04:52:13.149" starttime="20190209 04:52:11.372"></status>
</kw>
<msg timestamp="20190209 04:52:13.149" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190209 04:52:13.150" starttime="20190209 04:52:11.368"></status>
</kw>
<kw name="Create Local Ssh Tunnel" library="SSHLibrary">
<doc>The keyword uses the existing connection to set up local port forwarding
(the openssh -L option) from a local port through a tunneled
connection to a destination reachable from the SSH server machine.</doc>
<arguments>
<arg>local_port=@{live_action_port_forwarding}[0]</arg>
<arg>remote_host=@{live_action_port_forwarding}[1]</arg>
<arg>remote_port=22</arg>
</arguments>
<msg timestamp="20190209 04:52:13.151" level="TRACE">Arguments: [ local_port='45105' | remote_host='10.0.0.11' | remote_port=22 ]</msg>
<msg timestamp="20190209 04:52:13.152" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190209 04:52:13.152" starttime="20190209 04:52:13.150"></status>
</kw>
<status status="PASS" endtime="20190209 04:52:13.153" critical="yes" starttime="20190209 04:52:11.366"></status>
</test>
<test id="s1-s1-s1-t2" name="Configure Live Action">
<kw name="Connect to Server with Keys" library="linux">
<arguments>
<arg>server_address=localhost</arg>
<arg>server_port=@{live_action_port_forwarding}[0]</arg>
<arg>username=ubuntu</arg>
<arg>priv_key=${ssh_key_path}</arg>
</arguments>
<msg timestamp="20190209 04:52:13.157" level="TRACE">Arguments: [ ${server_address}='localhost' | ${server_port}='45105' | ${username}='ubuntu' | ${priv_key}='~/.ssh/id_rsa' | ${priv_key_password}=None | ${delay}='0.5' | ${prompt}=None | ${timeout}='3' | ${newline}='LF' ]</msg>
<kw name="Parse Path" library="CATSUtils">
<arguments>
<arg>${priv_key}</arg>
</arguments>
<assign>
<var>${p_path}</var>
</assign>
<msg timestamp="20190209 04:52:13.159" level="TRACE">Arguments: [ '~/.ssh/id_rsa' ]</msg>
<msg timestamp="20190209 04:52:13.159" level="TRACE">Return: {'dir_name': '/root/.ssh', 'file_name': 'id_rsa', 'full_path': '/root/.ssh/id_rsa'}</msg>
<msg timestamp="20190209 04:52:13.159" level="INFO">${p_path} = {u'file_name': u'id_rsa', u'full_path': u'/root/.ssh/id_rsa', u'dir_name': u'/root/.ssh'}</msg>
<status status="PASS" endtime="20190209 04:52:13.159" starttime="20190209 04:52:13.158"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${server_address}</arg>
<arg>port=${server_port}</arg>
<arg>prompt=${prompt}</arg>
<arg>timeout=${timeout}</arg>
<arg>newline=${newline}</arg>
</arguments>
<msg timestamp="20190209 04:52:13.161" level="TRACE">Arguments: [ 'localhost' | port=45105 | prompt=None | timeout='3' | newline='LF' ]</msg>
<msg timestamp="20190209 04:52:13.161" level="TRACE">Return: 2</msg>
<status status="PASS" endtime="20190209 04:52:13.161" starttime="20190209 04:52:13.160"></status>
</kw>
<kw name="Login With Public Key" library="SSHLibrary">
<doc>Logs into the SSH server using key-based authentication.</doc>
<arguments>
<arg>${username}</arg>
<arg>${p_path['full_path']}</arg>
<arg>password=${priv_key_password}</arg>
<arg>delay=${delay}</arg>
</arguments>
<msg timestamp="20190209 04:52:13.162" level="TRACE">Arguments: [ 'ubuntu' | '/root/.ssh/id_rsa' | password=None | delay='0.5' ]</msg>
<msg timestamp="20190209 04:52:13.162" level="INFO">Logging into 'localhost:45105' as 'ubuntu'.</msg>
<msg timestamp="20190209 04:52:13.291" level="DEBUG">Adding ssh-rsa host key for [localhost]:45105: a5f5a4f66060c4f6e3a1e13828460129</msg>
<msg timestamp="20190209 04:52:13.295" level="DEBUG">Trying key f1cc6b9cf45c6d60d7adbbda9b75b364 from /root/.ssh/id_rsa</msg>
<msg timestamp="20190209 04:52:13.397" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20190209 04:52:14.588" level="INFO">Read output: Welcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-51-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

0 packages can be updated.
0 updates are security updates.

New release '18.04.1 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


Last login: Sat Feb  9 04:51:35 2019 from 10.0.0.1
ubuntu@live-action:~$</msg>
<msg timestamp="20190209 04:52:14.589" level="TRACE">Return: "Welcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-51-generic x86_64)\r\n\r\n * Documentation:  https://help.ubuntu.com\r\n * Management:     https://landscape.canonical.com\r\n * Support:        https://ubuntu.com/advantage\r\n\r\n  Get cloud support with Ubuntu Advantage Cloud Guest:\r\n    http://www.ubuntu.com/business/services/cloud\r\n\r\n0 packages can be updated.\r\n0 updates are security updates.\r\n\r\nNew release '18.04.1 LTS' available.\r\nRun 'do-release-upgrade' to upgrade to it.\r\n\r\n\r\nLast login: Sat Feb  9 04:51:35 2019 from 10.0.0.1\r\r\nubuntu@live-action:~$ "</msg>
<status status="PASS" endtime="20190209 04:52:14.589" starttime="20190209 04:52:13.161"></status>
</kw>
<msg timestamp="20190209 04:52:14.589" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20190209 04:52:14.590" starttime="20190209 04:52:13.156"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>su - livesp</arg>
</arguments>
<msg timestamp="20190209 04:52:14.591" level="TRACE">Arguments: [ 'su - livesp' ]</msg>
<msg timestamp="20190209 04:52:14.619" level="INFO">su - livesp</msg>
<msg timestamp="20190209 04:52:14.619" level="TRACE">Return: 'su - livesp\r\n'</msg>
<status status="PASS" endtime="20190209 04:52:14.619" starttime="20190209 04:52:14.590"></status>
</kw>
<kw name="Read Until Regexp" library="SSHLibrary">
<doc>Consumes and returns the server output until a match to ``regexp`` is found.</doc>
<arguments>
<arg>Password:</arg>
</arguments>
<msg timestamp="20190209 04:52:14.620" level="TRACE">Arguments: [ 'Password:' ]</msg>
<msg timestamp="20190209 04:52:14.622" level="INFO">Password:</msg>
<msg timestamp="20190209 04:52:14.622" level="TRACE">Return: 'Password:'</msg>
<status status="PASS" endtime="20190209 04:52:14.622" starttime="20190209 04:52:14.620"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>livesp${\n}</arg>
</arguments>
<msg timestamp="20190209 04:52:14.624" level="TRACE">Arguments: [ 'livesp\n' ]</msg>
<msg timestamp="20190209 04:52:14.658" level="TRACE">Return: ' \r\n'</msg>
<status status="PASS" endtime="20190209 04:52:14.658" starttime="20190209 04:52:14.623"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>curl -L -O ${livesp_install_url}</arg>
</arguments>
<msg timestamp="20190209 04:52:14.659" level="TRACE">Arguments: [ 'curl -L -O http://files.nuagedemos.net/ncpeimg_5.3.2_28.md5' ]</msg>
<msg timestamp="20190209 04:52:14.660" level="INFO">Executing command 'curl -L -O http://files.nuagedemos.net/ncpeimg_5.3.2_28.md5'.</msg>
<msg timestamp="20190209 04:52:14.660" level="DEBUG">[chan 1] Max packet in: 32768 bytes</msg>
<msg timestamp="20190209 04:52:14.866" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20190209 04:52:14.866" level="TRACE">Return: ''</msg>
<status status="PASS" endtime="20190209 04:52:14.866" starttime="20190209 04:52:14.659"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo mv /home/ubuntu/ncpeimg_5.3.2_28.md5 /home/livesp/ncpeimg_5.3.2_28.md5</arg>
</arguments>
<msg timestamp="20190209 04:52:14.867" level="TRACE">Arguments: [ 'sudo mv /home/ubuntu/ncpeimg_5.3.2_28.md5 /home/livesp/ncpeimg_5.3.2_28.md5' ]</msg>
<msg timestamp="20190209 04:52:14.867" level="INFO">Executing command 'sudo mv /home/ubuntu/ncpeimg_5.3.2_28.md5 /home/livesp/ncpeimg_5.3.2_28.md5'.</msg>
<msg timestamp="20190209 04:52:14.868" level="DEBUG">[chan 2] Max packet in: 32768 bytes</msg>
<msg timestamp="20190209 04:52:15.015" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20190209 04:52:15.015" level="TRACE">Return: ''</msg>
<status status="PASS" endtime="20190209 04:52:15.015" starttime="20190209 04:52:14.867"></status>
</kw>
<status status="PASS" endtime="20190209 04:52:15.016" critical="yes" starttime="20190209 04:52:13.154"></status>
</test>
<status status="PASS" endtime="20190209 04:52:15.017" starttime="20190209 04:52:09.386"></status>
</suite>
<status status="PASS" endtime="20190209 04:52:15.023" starttime="20190209 04:52:09.384"></status>
</suite>
<status status="PASS" endtime="20190209 04:52:15.028" starttime="20190209 04:52:09.362"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="2">Tests</stat>
<stat fail="0" id="s1-s1" name="02 liveAction" pass="2">Tests.02 liveAction</stat>
<stat fail="0" id="s1-s1-s1" name="00 Setup Vm" pass="2">Tests.02 liveAction.00 Setup Vm</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
